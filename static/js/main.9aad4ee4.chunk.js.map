{"version":3,"sources":["app/helpers.ts","features/calcSlice.ts","features/themeSlice.ts","app/store.ts","app/hooks.ts","components/HistoryOfOperation/HistoryOfOperation.tsx","components/Number/Number.tsx","components/Operation/Operation.tsx","components/ListOfButtons/ListOfButtons.tsx","components/ResultField/ResultField.tsx","components/ThemeSwitch/ThemeSwitch.tsx","components/App/App.tsx","index.tsx"],"names":["numberWithSpaces","x","parts","toString","split","replace","join","calcSlice","createSlice","name","initialState","currentValue","displayedValue","expression","newExpression","historyOfOperation","reducers","addNumber","state","action","concat","payload","addOperation","parseFloat","slice","updateExpression","calculate","replaceAll","parse","str","Function","length","shift","Object","toConsumableArray","clear","actions","theme","localStorage","getItem","themeSlice","changeTheme","setItem","store","configureStore","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","useClickEffect","arguments","undefined","_useState","useState","_useState2","slicedToArray","isClicked","setIsClicked","setTimeout","HistoryOfOperation","history","react_default","a","createElement","className","map","exp","index","key","Number","_ref","number","dispatch","_useClickEffect","_useClickEffect2","clickEffect","onClick","Operation","operation","style","ListOfButtons","components_Operation_Operation","components_Number_Number","ResultField","readOnly","value","ThemeSwitch","type","checked","onChange","App","components_HistoryOfOperation_HistoryOfOperation","components_ResultField_ResultField","components_ThemeSwitch_ThemeSwitch","components_ListOfButtons_ListOfButtons","container","document","getElementById","createRoot","render","StrictMode","es","components_App_App"],"mappings":"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","file":"static/js/main.9aad4ee4.chunk.js","sourcesContent":["export const numberWithSpaces = (x: string): string => {\n\tconst parts = x.toString().split('.')\n\tparts[0] = parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ' ')\n\treturn parts.join('.')\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { numberWithSpaces } from '../app/helpers'\n\ntype CalcState = {\n\tcurrentValue: string\n\texpression: string\n\tdisplayedValue: string\n\tnewExpression: boolean\n\thistoryOfOperation: string[]\n}\n\nconst initialState: CalcState = {\n\tcurrentValue: '',\n\tdisplayedValue: '',\n\texpression: '',\n\tnewExpression: false,\n\thistoryOfOperation: [],\n}\n\nconst calcSlice = createSlice({\n\tname: 'calc',\n\tinitialState,\n\treducers: {\n\t\taddNumber: (state, action: PayloadAction<string>) => {\n\t\t\tif (state.newExpression === true) {\n\t\t\t\tstate.currentValue = state.expression = state.displayedValue = ''\n\t\t\t\tstate.newExpression = false\n\t\t\t}\n\n\t\t\tstate.currentValue = state.displayedValue = state.currentValue.concat(action.payload)\n\t\t},\n\t\taddOperation: (state, action: PayloadAction<string>) => {\n\t\t\tif (state.newExpression === true) {\n\t\t\t\tstate.expression = ''\n\t\t\t\tstate.newExpression = false\n\t\t\t}\n\n\t\t\tif (action.payload === '+/-' && state.currentValue !== '') {\n\t\t\t\tif (parseFloat(state.currentValue) > 0) {\n\t\t\t\t\tstate.displayedValue = state.currentValue = '-' + state.currentValue\n\t\t\t\t} else {\n\t\t\t\t\tstate.displayedValue = state.currentValue = state.currentValue.toString().slice(1)\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (action.payload === 'backspace') {\n\t\t\t\tstate.displayedValue = state.currentValue = state.currentValue.toString().slice(0, -1)\n\t\t\t}\n\n\t\t\tconst updateExpression = () => {\n\t\t\t\tif (\n\t\t\t\t\taction.payload !== '+/-' &&\n\t\t\t\t\taction.payload !== 'backspace' &&\n\t\t\t\t\tstate.currentValue !== '-'\n\t\t\t\t) {\n\t\t\t\t\tstate.expression = state.expression.concat(state.currentValue).concat(action.payload)\n\t\t\t\t\tstate.displayedValue = state.currentValue\n\t\t\t\t\tstate.currentValue = ''\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\taction.payload === '-' ||\n\t\t\t\taction.payload === '+' ||\n\t\t\t\taction.payload === '*' ||\n\t\t\t\taction.payload === '/'\n\t\t\t) {\n\t\t\t\tif (\n\t\t\t\t\t(state.expression.slice(-1) === '-' ||\n\t\t\t\t\t\tstate.expression.slice(-1) === '+' ||\n\t\t\t\t\t\tstate.expression.slice(-1) === '*' ||\n\t\t\t\t\t\tstate.expression.slice(-1) === '/') &&\n\t\t\t\t\tstate.currentValue === ''\n\t\t\t\t) {\n\t\t\t\t\tstate.expression = state.expression.slice(0, -1).concat(action.payload)\n\t\t\t\t} else {\n\t\t\t\t\tupdateExpression()\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateExpression()\n\t\t\t}\n\t\t},\n\t\tcalculate: state => {\n\t\t\tif (state.newExpression === true || state.currentValue === '' || state.expression === '') {\n\t\t\t\tstate.currentValue = state.expression = state.displayedValue = ''\n\t\t\t} else {\n\t\t\t\tstate.expression = state.expression\n\t\t\t\t\t.concat(state.currentValue)\n\t\t\t\t\t.replaceAll('--', '+')\n\t\t\t\t\t.replaceAll('+-', '-')\n\n\t\t\t\tconst parse = (str: string) => {\n\t\t\t\t\treturn Function(`'use strict'; return (${str})`)()\n\t\t\t\t}\n\n\t\t\t\tstate.displayedValue = state.currentValue = parse(state.expression)\n\n\t\t\t\tif (state.historyOfOperation.length > 2) {\n\t\t\t\t\tstate.historyOfOperation.shift()\n\t\t\t\t}\n\n\t\t\t\tstate.historyOfOperation = [\n\t\t\t\t\t...state.historyOfOperation,\n\t\t\t\t\tstate.expression + '=' + numberWithSpaces(parse(state.expression)),\n\t\t\t\t]\n\n\t\t\t\tstate.newExpression = true\n\t\t\t}\n\t\t},\n\t\tclear: state => {\n\t\t\tstate.currentValue = state.expression = state.displayedValue = ''\n\t\t\tstate.newExpression = false\n\t\t},\n\t},\n})\n\nexport const { addNumber, addOperation, calculate, clear } = calcSlice.actions\nexport default calcSlice.reducer\n","import { createSlice } from '@reduxjs/toolkit'\nimport React from 'react'\n\ntype ThemeState = {\n\ttheme: string\n}\n\nconst initialState: ThemeState = {\n\ttheme: localStorage.getItem('theme') || 'light',\n}\n\nconst themeSlice = createSlice({\n\tname: 'theme',\n\tinitialState,\n\treducers: {\n\t\tchangeTheme: state => {\n\t\t\tstate.theme === 'light' ? (state.theme = 'dark') : (state.theme = 'light')\n\t\t\tlocalStorage.setItem('theme', state.theme)\n\t\t},\n\t},\n})\n\nexport const { changeTheme } = themeSlice.actions\nexport default themeSlice.reducer\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport calcSlice from '../features/calcSlice'\nimport themeSlice from '../features/themeSlice'\n\nexport const store = configureStore({\n\treducer: {\n\t\tcalcSlice,\n\t\tthemeSlice,\n\t},\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\nimport type { RootState, AppDispatch } from './store'\nimport { useState } from 'react'\n\n// redux\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n\n// the effect of pressing the button\nexport const useClickEffect = (initialState: boolean = false): [boolean, () => void] => {\n  const [isClicked, setIsClicked] = useState<boolean>(initialState)\n\n  const clickEffect = () => {\n    setIsClicked(true)\n    setTimeout(() => {\n      setIsClicked(false)\n    }, 100)\n  }\n\n  return [isClicked, clickEffect]\n}\n","import React from 'react'\nimport { useAppSelector } from '../../app/hooks'\nimport './style.css'\n\nconst HistoryOfOperation = () => {\n\tconst history = useAppSelector(state => state.calcSlice.historyOfOperation)\n\n\treturn (\n\t\t<section className=\"history-of-operation\">\n\t\t\t{history.map((exp, index) => (\n\t\t\t\t<div className=\"history-of-operation__expression\" key={index}>\n\t\t\t\t\t{exp}\n\t\t\t\t</div>\n\t\t\t))}\n\t\t</section>\n\t)\n}\n\nexport default HistoryOfOperation\n","import React, { useState } from 'react'\nimport { FC } from 'react'\nimport { useAppDispatch, useClickEffect } from '../../app/hooks'\nimport { addNumber } from '../../features/calcSlice'\nimport './style.css'\n\ntype Number = {\n\tnumber: string\n}\n\nconst Number: FC<Number> = ({ number }) => {\n\tconst dispatch = useAppDispatch()\n\tconst [isClicked, clickEffect] = useClickEffect()\n\n\tconst numberButtonHandler = () => {\n\t\tdispatch(addNumber(number))\n\t\tclickEffect()\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`calc-button number ${isClicked ? 'calc-button--clicked' : ''}`}\n\t\t\tonClick={numberButtonHandler}>\n\t\t\t<p className=\"number__value\">{number}</p>\n\t\t</div>\n\t)\n}\n\nexport default Number\n","import React, { FC } from 'react'\nimport { useAppDispatch, useClickEffect } from '../../app/hooks'\nimport { addOperation, clear, calculate } from '../../features/calcSlice'\nimport './style.css'\n\ntype Operation = {\n\toperation: string\n\tstyle: string\n}\n\nconst Operation: FC<Operation> = ({ operation, style }) => {\n\tconst dispatch = useAppDispatch()\n\tconst [isClicked, clickEffect] = useClickEffect()\n\n\tconst operationHandler = () => {\n\t\tclickEffect()\n\n\t\tswitch (operation) {\n\t\t\tcase 'clear':\n\t\t\t\tdispatch(clear())\n\t\t\t\tbreak\n\t\t\tcase '=':\n\t\t\t\tdispatch(calculate())\n\t\t\t\tbreak\n\t\t\tdefault:\n\t\t\t\tdispatch(addOperation(operation))\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\tconst setOperationName = () =>\n\t\toperation === 'clear' ||\n\t\toperation === '+/-' ||\n\t\toperation === 'backspace' ||\n\t\toperation === '/' ||\n\t\toperation === '*' ||\n\t\toperation === '-' ||\n\t\toperation === '+' ||\n\t\toperation === '='\n\t\t\t? ''\n\t\t\t: operation\n\n\treturn (\n\t\t<div\n\t\t\tclassName={`calc-button ${style} ${isClicked ? 'calc-button--clicked' : ''}`}\n\t\t\tonClick={operationHandler}>\n\t\t\t<p className={`${style}__name`}>{setOperationName()}</p>\n\t\t</div>\n\t)\n}\n\nexport default Operation\n","import React from 'react'\nimport Number from '../Number/Number'\nimport Operation from '../Operation/Operation'\nimport './style.css'\n\nconst ListOfButtons = () => {\n\treturn (\n\t\t<section className=\"list-of-buttons\">\n\t\t\t<Operation operation=\"clear\" style=\"clear\" />\n\t\t\t<Operation operation=\"backspace\" style=\"backspace\" />\n\t\t\t<Operation operation=\"+/-\" style=\"plus-minus\" />\n\t\t\t<Operation operation=\"/\" style=\"divide\" />\n\t\t\t<Number number=\"7\" />\n\t\t\t<Number number=\"8\" />\n\t\t\t<Number number=\"9\" />\n\t\t\t<Operation operation=\"*\" style=\"multiply\" />\n\t\t\t<Number number=\"4\" />\n\t\t\t<Number number=\"5\" />\n\t\t\t<Number number=\"6\" />\n\t\t\t<Operation operation=\"-\" style=\"minus\" />\n\t\t\t<Number number=\"1\" />\n\t\t\t<Number number=\"2\" />\n\t\t\t<Number number=\"3\" />\n\t\t\t<Operation operation=\"+\" style=\"plus\" />\n\t\t\t<Number number=\"0\" />\n\t\t\t<Number number=\".\" />\n\t\t\t<Operation operation=\"=\" style=\"result\" />\n\t\t</section>\n\t)\n}\n\nexport default ListOfButtons\n","import React from 'react'\nimport { numberWithSpaces } from '../../app/helpers'\nimport { useAppSelector } from '../../app/hooks'\nimport './style.css'\n\nconst ResultField = () => {\n\tconst displayedValue = useAppSelector(state => state.calcSlice.displayedValue)\n\n\treturn (\n\t\t<section className=\"result-field\">\n\t\t\t<input\n\t\t\t\tclassName=\"result-field__value\"\n\t\t\t\treadOnly\n\t\t\t\tvalue={displayedValue === '' ? '0' : numberWithSpaces(displayedValue)}\n\t\t\t/>\n\t\t</section>\n\t)\n}\n\nexport default ResultField\n","import React from 'react'\nimport { useAppDispatch, useAppSelector } from '../../app/hooks'\nimport { changeTheme } from '../../features/themeSlice'\nimport './style.css'\n\nconst ThemeSwitch = () => {\n\tconst theme = useAppSelector(state => state.themeSlice.theme)\n\tconst dispatch = useAppDispatch()\n\n\treturn (\n\t\t<section className=\"theme-switch\">\n\t\t\t<input\n\t\t\t\tclassName=\"theme-switch__toggle\"\n\t\t\t\ttype=\"checkbox\"\n\t\t\t\tchecked={theme === 'dark' ? true : false}\n\t\t\t\tonChange={() => dispatch(changeTheme())}\n\t\t\t/>\n\t\t\t<p className=\"theme-switch__title\">Switch to {theme === 'light' ? 'dark' : 'light'} theme</p>\n\t\t</section>\n\t)\n}\n\nexport default ThemeSwitch\n","import React from 'react'\nimport { useAppSelector } from '../../app/hooks'\nimport HistoryOfOperation from '../HistoryOfOperation/HistoryOfOperation'\nimport ListOfButtons from '../ListOfButtons/ListOfButtons'\nimport ResultField from '../ResultField/ResultField'\nimport ThemeSwitch from '../ThemeSwitch/ThemeSwitch'\nimport './style.css'\n\nconst App = () => {\n\tconst theme = useAppSelector(state => state.themeSlice.theme)\n\n\treturn (\n\t\t<div className={`wrapper wrapper--${theme}`}>\n\t\t\t<div className=\"container\">\n\t\t\t\t<HistoryOfOperation />\n\t\t\t\t<ResultField />\n\t\t\t\t<ThemeSwitch />\n\t\t\t\t<ListOfButtons />\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import React from 'react'\nimport { createRoot } from 'react-dom/client'\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\nimport App from './components/App/App'\nimport './style.css'\n\nconst container = document.getElementById('root')!\nconst root = createRoot(container)\n\nroot.render(\n\t<React.StrictMode>\n\t\t<Provider store={store}>\n\t\t\t<App />\n\t\t</Provider>\n\t</React.StrictMode>\n)\n"],"sourceRoot":""}